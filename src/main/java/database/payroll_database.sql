-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.benefits
(
    benefit_id integer NOT NULL DEFAULT 'nextval('benefits_benefit_id_seq'::regclass)',
    employee_id integer,
    benefit_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    enrollment_date date NOT NULL,
    cost numeric(10, 2) NOT NULL,
    CONSTRAINT benefits_pkey PRIMARY KEY (benefit_id)
);

CREATE TABLE IF NOT EXISTS public.bonuses
(
    bonus_id integer NOT NULL DEFAULT 'nextval('bonuses_bonus_id_seq'::regclass)',
    payroll_records_id integer NOT NULL,
    type character varying(255) COLLATE pg_catalog."default" NOT NULL,
    amount numeric(10, 2) NOT NULL,
    CONSTRAINT bonuses_pkey PRIMARY KEY (bonus_id)
);

CREATE TABLE IF NOT EXISTS public.deductions
(
    deduction_id integer NOT NULL DEFAULT 'nextval('deductions_deduction_id_seq'::regclass)',
    payroll_records_id integer NOT NULL,
    type character varying(255) COLLATE pg_catalog."default" NOT NULL,
    amount numeric(10, 2) NOT NULL,
    CONSTRAINT deductions_pkey PRIMARY KEY (deduction_id)
);

CREATE TABLE IF NOT EXISTS public.direct_deposit_accounts
(
    direct_deposit_account_id integer NOT NULL DEFAULT 'nextval('direct_deposit_accounts_direct_deposit_account_id_seq'::regclass)',
    employee_id integer NOT NULL,
    account_number character varying(20) COLLATE pg_catalog."default" NOT NULL,
    routing_number character varying(20) COLLATE pg_catalog."default" NOT NULL,
    bank_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT direct_deposit_accounts_pkey PRIMARY KEY (direct_deposit_account_id)
);

CREATE TABLE IF NOT EXISTS public.employee
(
    employee_id integer NOT NULL DEFAULT 'nextval('employee_employee_id_seq'::regclass)',
    first_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    last_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    job_title character varying(255) COLLATE pg_catalog."default" NOT NULL,
    salary numeric(10, 2) NOT NULL,
    hire_date date NOT NULL,
    department character varying(255) COLLATE pg_catalog."default" NOT NULL,
    address character varying(255) COLLATE pg_catalog."default" NOT NULL,
    email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT employee_pkey PRIMARY KEY (employee_id)
);

CREATE TABLE IF NOT EXISTS public.employee_dependents
(
    dependent_id integer NOT NULL DEFAULT 'nextval('employee_dependents_dependent_id_seq'::regclass)',
    first_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    last_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    relationship character varying(255) COLLATE pg_catalog."default" NOT NULL,
    employee_id integer,
    CONSTRAINT employee_dependents_pkey PRIMARY KEY (dependent_id)
);

CREATE TABLE IF NOT EXISTS public.employee_salary_history
(
    emp_salary_history_id integer NOT NULL DEFAULT 'nextval('employee_salary_history_emp_salary_history_id_seq'::regclass)',
    salary numeric(10, 2) NOT NULL,
    effective_date date NOT NULL,
    employee_id integer NOT NULL DEFAULT 'nextval('employee_salary_history_employee_id_seq'::regclass)',
    CONSTRAINT employee_salary_history_pkey PRIMARY KEY (emp_salary_history_id)
);

CREATE TABLE IF NOT EXISTS public.job_histories
(
    job_history_id integer NOT NULL DEFAULT 'nextval('job_histories_job_history_id_seq'::regclass)',
    employee_id integer,
    job_id integer NOT NULL,
    start_date date NOT NULL,
    end_date date,
    CONSTRAINT job_histories_pkey PRIMARY KEY (job_history_id)
);

CREATE TABLE IF NOT EXISTS public.job_title
(
    job_id integer NOT NULL DEFAULT 'nextval('job_title_job_id_seq'::regclass)',
    title character varying(255) COLLATE pg_catalog."default" NOT NULL,
    description character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT job_title_pkey PRIMARY KEY (job_id)
);

CREATE TABLE IF NOT EXISTS public.pay_stubs
(
    pay_stubs_id integer NOT NULL DEFAULT 'nextval('pay_stubs_pay_stubs_id_seq'::regclass)',
    payroll_records_id integer NOT NULL,
    generated_date date NOT NULL,
    file_location character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT pay_stubs_pkey PRIMARY KEY (pay_stubs_id)
);

CREATE TABLE IF NOT EXISTS public.payroll
(
    payroll_id integer NOT NULL DEFAULT 'nextval('payroll_payroll_id_seq'::regclass)',
    employee_id integer NOT NULL,
    pay_period date NOT NULL,
    hours_worked integer NOT NULL,
    overtime_hours integer NOT NULL,
    gross_pay numeric(10, 2) NOT NULL,
    deductions numeric(10, 2) NOT NULL,
    net_pay numeric(10, 2) NOT NULL,
    CONSTRAINT payroll_pkey PRIMARY KEY (payroll_id)
);

CREATE TABLE IF NOT EXISTS public.payroll_periods
(
    payroll_periods_id integer NOT NULL DEFAULT 'nextval('payroll_periods_payroll_periods_id_seq'::regclass)',
    period_start date NOT NULL,
    period_end date NOT NULL,
    processed_date date NOT NULL,
    CONSTRAINT payroll_periods_pkey PRIMARY KEY (payroll_periods_id)
);

CREATE TABLE IF NOT EXISTS public.payroll_records
(
    payroll_records_id integer NOT NULL DEFAULT 'nextval('payroll_records_payroll_records_id_seq'::regclass)',
    employee_id integer NOT NULL,
    payroll_periods_id integer NOT NULL,
    gross_pay numeric(10, 2) NOT NULL,
    deductions numeric(10, 2) NOT NULL,
    net_pay numeric(10, 2) NOT NULL,
    CONSTRAINT payroll_records_pkey PRIMARY KEY (payroll_records_id)
);

CREATE TABLE IF NOT EXISTS public.tax_exemptions
(
    tax_exemp_id integer NOT NULL DEFAULT 'nextval('tax_exemptions_tax_exemp_id_seq'::regclass)',
    employee_id integer NOT NULL,
    type character varying(255) COLLATE pg_catalog."default" NOT NULL,
    exemptions integer NOT NULL,
    CONSTRAINT tax_exemptions_pkey PRIMARY KEY (tax_exemp_id)
);

CREATE TABLE IF NOT EXISTS public.tax_records
(
    tax_records_id integer NOT NULL DEFAULT 'nextval('tax_records_tax_records_id_seq'::regclass)',
    employee_id integer NOT NULL,
    payroll_periods_id integer NOT NULL,
    federal_tax numeric(10, 2) NOT NULL,
    medicare_tax numeric(10, 2) NOT NULL,
    state_tax numeric(10, 2) NOT NULL,
    local_tax numeric(10, 2) NOT NULL,
    other_tax numeric(10, 2) NOT NULL,
    CONSTRAINT tax_records_pkey PRIMARY KEY (tax_records_id)
);

CREATE TABLE IF NOT EXISTS public.time_cards
(
    time_card_id integer NOT NULL DEFAULT 'nextval('time_cards_time_card_id_seq'::regclass)',
    employee_id integer NOT NULL,
    week_ending_date date NOT NULL,
    regular_hours numeric(5, 2) NOT NULL,
    overtime_hours numeric(5, 2) NOT NULL,
    CONSTRAINT time_cards_pkey PRIMARY KEY (time_card_id)
);

CREATE TABLE IF NOT EXISTS public.time_logs
(
    time_log_id integer NOT NULL DEFAULT 'nextval('time_logs_time_log_id_seq'::regclass)',
    employee_id integer NOT NULL,
    clock_in_time timestamp without time zone NOT NULL,
    clock_out_time timestamp without time zone,
    CONSTRAINT time_logs_pkey PRIMARY KEY (time_log_id)
);

CREATE TABLE IF NOT EXISTS public.time_off_requests
(
    time_off_request_id integer NOT NULL DEFAULT 'nextval('time_off_requests_time_off_request_id_seq'::regclass)',
    employee_id integer NOT NULL,
    time_off_types_id integer NOT NULL,
    start_date date NOT NULL,
    end_date date NOT NULL,
    status character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT time_off_requests_pkey PRIMARY KEY (time_off_request_id)
);

CREATE TABLE IF NOT EXISTS public.time_off_types
(
    time_off_types_id integer NOT NULL DEFAULT 'nextval('time_off_types_time_off_types_id_seq'::regclass)',
    type character varying(255) COLLATE pg_catalog."default" NOT NULL,
    description character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT time_off_types_pkey PRIMARY KEY (time_off_types_id)
);

ALTER TABLE IF EXISTS public.benefits
    ADD CONSTRAINT employee_id FOREIGN KEY (employee_id)
    REFERENCES public.employee (employee_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.bonuses
    ADD CONSTRAINT bonuses_payroll_records_id_fkey FOREIGN KEY (payroll_records_id)
    REFERENCES public.payroll_records (payroll_records_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.deductions
    ADD CONSTRAINT deductions_payroll_records_id_fkey FOREIGN KEY (payroll_records_id)
    REFERENCES public.payroll_records (payroll_records_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.direct_deposit_accounts
    ADD CONSTRAINT direct_deposit_accounts_employee_id_fkey FOREIGN KEY (employee_id)
    REFERENCES public.employee (employee_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.employee_dependents
    ADD CONSTRAINT employee_id FOREIGN KEY (employee_id)
    REFERENCES public.employee (employee_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.employee_salary_history
    ADD CONSTRAINT employee_id FOREIGN KEY (employee_id)
    REFERENCES public.employee (employee_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS fki_employee_id
    ON public.employee_salary_history(employee_id);


ALTER TABLE IF EXISTS public.job_histories
    ADD CONSTRAINT employee_id FOREIGN KEY (employee_id)
    REFERENCES public.employee (employee_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.job_histories
    ADD CONSTRAINT job_histories_job_id_fkey FOREIGN KEY (job_id)
    REFERENCES public.job_title (job_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.pay_stubs
    ADD CONSTRAINT pay_stubs_payroll_records_id_fkey FOREIGN KEY (payroll_records_id)
    REFERENCES public.payroll_records (payroll_records_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.payroll
    ADD CONSTRAINT payroll_employee_id_fkey FOREIGN KEY (employee_id)
    REFERENCES public.employee (employee_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.payroll_records
    ADD CONSTRAINT payroll_records_employee_id_fkey FOREIGN KEY (employee_id)
    REFERENCES public.employee (employee_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.payroll_records
    ADD CONSTRAINT payroll_records_payroll_periods_id_fkey FOREIGN KEY (payroll_periods_id)
    REFERENCES public.payroll_periods (payroll_periods_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.tax_exemptions
    ADD CONSTRAINT tax_exemptions_employee_id_fkey FOREIGN KEY (employee_id)
    REFERENCES public.employee (employee_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.tax_records
    ADD CONSTRAINT tax_records_employee_id_fkey FOREIGN KEY (employee_id)
    REFERENCES public.employee (employee_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.tax_records
    ADD CONSTRAINT tax_records_payroll_periods_id_fkey FOREIGN KEY (payroll_periods_id)
    REFERENCES public.payroll_periods (payroll_periods_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.time_cards
    ADD CONSTRAINT time_cards_employee_id_fkey FOREIGN KEY (employee_id)
    REFERENCES public.employee (employee_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.time_logs
    ADD CONSTRAINT time_logs_employee_id_fkey FOREIGN KEY (employee_id)
    REFERENCES public.employee (employee_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.time_off_requests
    ADD CONSTRAINT time_off_requests_employee_id_fkey FOREIGN KEY (employee_id)
    REFERENCES public.employee (employee_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.time_off_requests
    ADD CONSTRAINT time_off_requests_time_off_types_id_fkey FOREIGN KEY (time_off_types_id)
    REFERENCES public.time_off_types (time_off_types_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;